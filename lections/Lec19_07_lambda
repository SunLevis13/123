# list =[]
# for i in range (1,101):
#     list.append(i);
# print(list)

# list = [i for i in range (1,21)]
# print(list)

# list = [i for i in range (1,21) if i%2 == 0]
# print(list)

# list = [(i,i) for i in range (1,21) if i%2 == 0]
# print(list)

# def f(x):
#     return x**3
# list = [(i,f(i)) for i in range (1,21) if i%2 == 0]
# print(list)

# EXAMPLE
# import os
# path = os.path.join ('folder_lec','lec19_07.txt')

# with open(path,'r') as f:
#     data = f.read() + ' '
# print(data)

# numbers =[]

# while data != '': # пока моя строка не пустая
#     space_pos = data.index(' ')
#     numbers.append(int(data[:space_pos]))
#     data = data[space_pos+1:]
#     print(space_pos)
#     print(data)
# print(numbers)

# out = []
# for e in numbers:
#     if not e%2:
#         out.append((e,e**2))
# print(out)

# with lambda and List Comprehension
# def select(f,col):
#     return[f(x) for x in col]

# def where (f,col):
#     return [x for x in col if f(x)]

# data = '1 2 3 4 5 8 15 23'.split()

# res = select (int,data)
# print(res)
# res = where (lambda x: not x%2, res)
# print(res)
# res = select (lambda x: (x,x**2), res)
# print(res)

# with lambda and List Comprehension and map

def where (f,col):
    return [x for x in col if f(x)]

data = '1 2 3 4 5 8 15 23'.split()

res = map (int,data)
print(res)
res = where (lambda x: not x%2, res)
print(res)
res = list (map (lambda x: (x,x**2), res))
print(res)